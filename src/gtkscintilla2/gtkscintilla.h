/* GtkScintilla2: Wrapper widget for the Scintilla editing component.
 *
 * Copyright (c) 2002  Dennis J Houy <djhouy@paw.co.za>
 * Copyright (c) 2001  Michele Campeotto <micampe@micampe.it>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the 
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330, 
 * Boston, MA  02111-1307  USA.
 */

#ifndef __GTK_SCINTILLA_H__
#define __GTK_SCINTILLA_H__

#include <gtk/gtk.h>

#ifdef __cplusplus
extern "C" {
#endif

#define GTK_TYPE_SCINTILLA            (gtk_scintilla_get_type ())
#define GTK_SCINTILLA(obj)            (GTK_CHECK_CAST ((obj), GTK_TYPE_SCINTILLA, GtkScintilla))
#define GTK_SCINTILLA_CLASS(klass)    (GTK_CHECK_CLASS_CAST ((klass), GTK_TYPE_SCINTILLA, GtkScintillaClass))
#define GTK_IS_SCINTILLA(obj)         (GTK_CHECK_TYPE ((obj), GTK_TYPE_SCINTILLA))
#define GTK_IS_SCINTILLA_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SCINTILLA))

typedef struct _GtkScintilla      GtkScintilla;
typedef struct _GtkScintillaClass GtkScintillaClass;

struct _GtkScintilla {
    GtkFrame parent;
    
    GtkWidget *scintilla;
    
    GtkAccelGroup *accel_group;
};

struct _GtkScintillaClass {
    GtkFrameClass parent_class;

    void (* style_needed)        (GtkWidget *w, gint position);
    void (* char_added)          (GtkWidget *w, gint ch);
    void (* save_point_reached)  (GtkWidget *w);
    void (* save_point_left)     (GtkWidget *w);
    void (* modify_attempt_ro)   (GtkWidget *w);
    void (* key)                 (GtkWidget *w, gint ch, gint modifiers);
    void (* double_click)        (GtkWidget *w);
    void (* update_ui)           (GtkWidget *w);
    void (* modified)            (GtkWidget *w);
    void (* macro_record)        (GtkWidget *w, gint message, gint wparam, gint lparam);
    void (* margin_click)        (GtkWidget *w, gint modifiers, gint position, gint margin);
    void (* need_shown)          (GtkWidget *w, gint position, gint lenght);
    void (* painted)             (GtkWidget *w);
    void (* user_list_selection) (GtkWidget *w, gint type, gchar *text);
    void (* uri_dropped)         (GtkWidget *w, gchar *text);
    void (* dwell_start)         (GtkWidget *w, gint position);
    void (* dwell_end)           (GtkWidget *w, gint position);
    void (* zoom)                (GtkWidget *w);
};

GType      gtk_scintilla_get_type       (void) G_GNUC_CONST;
GtkWidget *gtk_scintilla_new            (void);

glong      gtk_scintilla_find_text      (GtkScintilla *sci,
                                         gint          flags,
                                         gchar        *text,
                                         glong         chrg_min,
                                         glong         chrg_max,
                                         glong        *text_min,
                                         glong        *text_max);

gchar     *gtk_scintilla_get_text_range (GtkScintilla *sci,
                                         gint          start,
                                         gint          end,
                                         gint         *length);

/* --- Start of autogenerated code --- */

#define INVALID_POSITION -1
#define SCI_START 2000
#define SCI_OPTIONAL_START 3000
#define SCI_LEXER_START 4000
void gtk_scintilla_add_text(GtkScintilla *sci, int length, const gchar * text);
void gtk_scintilla_insert_text(GtkScintilla *sci, glong pos, const gchar * text);
void gtk_scintilla_clear_all(GtkScintilla *sci);
void gtk_scintilla_clear_document_style(GtkScintilla *sci);
int gtk_scintilla_get_length(GtkScintilla *sci);
int gtk_scintilla_get_char_at(GtkScintilla *sci, glong pos);
glong gtk_scintilla_get_current_pos(GtkScintilla *sci);
glong gtk_scintilla_get_anchor(GtkScintilla *sci);
int gtk_scintilla_get_style_at(GtkScintilla *sci, glong pos);
void gtk_scintilla_redo(GtkScintilla *sci);
void gtk_scintilla_set_undo_collection(GtkScintilla *sci, gint collect_undo);
void gtk_scintilla_select_all(GtkScintilla *sci);
void gtk_scintilla_set_save_point(GtkScintilla *sci);
gint gtk_scintilla_can_redo(GtkScintilla *sci);
int gtk_scintilla_marker_line_from_handle(GtkScintilla *sci, int handle);
void gtk_scintilla_marker_delete_handle(GtkScintilla *sci, int handle);
gint gtk_scintilla_get_undo_collection(GtkScintilla *sci);
#define SCWS_INVISIBLE 0
#define SCWS_VISIBLEALWAYS 1
#define SCWS_VISIBLEAFTERINDENT 2
int gtk_scintilla_get_view_ws(GtkScintilla *sci);
void gtk_scintilla_set_view_ws(GtkScintilla *sci, int view_ws);
glong gtk_scintilla_position_from_point(GtkScintilla *sci, int x, int y);
glong gtk_scintilla_position_from_point_close(GtkScintilla *sci, int x, int y);
void gtk_scintilla_goto_line(GtkScintilla *sci, int line);
void gtk_scintilla_goto_pos(GtkScintilla *sci, glong pos);
void gtk_scintilla_set_anchor(GtkScintilla *sci, glong pos_anchor);
int gtk_scintilla_get_cur_line(GtkScintilla *sci, int length, gchar * text);
glong gtk_scintilla_get_end_styled(GtkScintilla *sci);
#define SC_EOL_CRLF 0
#define SC_EOL_CR 1
#define SC_EOL_LF 2
void gtk_scintilla_convert_eols(GtkScintilla *sci, int eol_mode);
int gtk_scintilla_get_eol_mode(GtkScintilla *sci);
void gtk_scintilla_set_eol_mode(GtkScintilla *sci, int eol_mode);
void gtk_scintilla_start_styling(GtkScintilla *sci, glong pos, int mask);
void gtk_scintilla_set_styling(GtkScintilla *sci, int length, int style);
gint gtk_scintilla_get_buffered_draw(GtkScintilla *sci);
void gtk_scintilla_set_buffered_draw(GtkScintilla *sci, gint buffered);
void gtk_scintilla_set_tab_width(GtkScintilla *sci, int tab_width);
int gtk_scintilla_get_tab_width(GtkScintilla *sci);
#define SC_CP_UTF8 65001
#define SC_CP_DBCS 1
void gtk_scintilla_set_code_page(GtkScintilla *sci, int code_page);
void gtk_scintilla_set_use_palette(GtkScintilla *sci, gint use_palette);
#define MARKER_MAX 31
#define SC_MARK_CIRCLE 0
#define SC_MARK_ROUNDRECT 1
#define SC_MARK_ARROW 2
#define SC_MARK_SMALLRECT 3
#define SC_MARK_SHORTARROW 4
#define SC_MARK_EMPTY 5
#define SC_MARK_ARROWDOWN 6
#define SC_MARK_MINUS 7
#define SC_MARK_PLUS 8
#define SC_MARK_VLINE 9
#define SC_MARK_LCORNER 10
#define SC_MARK_TCORNER 11
#define SC_MARK_BOXPLUS 12
#define SC_MARK_BOXPLUSCONNECTED 13
#define SC_MARK_BOXMINUS 14
#define SC_MARK_BOXMINUSCONNECTED 15
#define SC_MARK_LCORNERCURVE 16
#define SC_MARK_TCORNERCURVE 17
#define SC_MARK_CIRCLEPLUS 18
#define SC_MARK_CIRCLEPLUSCONNECTED 19
#define SC_MARK_CIRCLEMINUS 20
#define SC_MARK_CIRCLEMINUSCONNECTED 21
#define SC_MARK_BACKGROUND 22
#define SC_MARK_DOTDOTDOT 23
#define SC_MARK_ARROWS 24
#define SC_MARK_PIXMAP 25
#define SC_MARK_FULLRECT 26
#define SC_MARK_CHARACTER 10000
#define SC_MARKNUM_FOLDEREND 25
#define SC_MARKNUM_FOLDEROPENMID 26
#define SC_MARKNUM_FOLDERMIDTAIL 27
#define SC_MARKNUM_FOLDERTAIL 28
#define SC_MARKNUM_FOLDERSUB 29
#define SC_MARKNUM_FOLDER 30
#define SC_MARKNUM_FOLDEROPEN 31
#define SC_MASK_FOLDERS 0xFE000000
void gtk_scintilla_marker_define(GtkScintilla *sci, int marker_number, int marker_symbol);
void gtk_scintilla_marker_set_fore(GtkScintilla *sci, int marker_number, glong fore);
void gtk_scintilla_marker_set_back(GtkScintilla *sci, int marker_number, glong back);
int gtk_scintilla_marker_add(GtkScintilla *sci, int line, int marker_number);
void gtk_scintilla_marker_delete(GtkScintilla *sci, int line, int marker_number);
void gtk_scintilla_marker_delete_all(GtkScintilla *sci, int marker_number);
int gtk_scintilla_marker_get(GtkScintilla *sci, int line);
int gtk_scintilla_marker_next(GtkScintilla *sci, int line_start, int marker_mask);
int gtk_scintilla_marker_previous(GtkScintilla *sci, int line_start, int marker_mask);
void gtk_scintilla_marker_define_pixmap(GtkScintilla *sci, int marker_number, const gchar * pixmap);
void gtk_scintilla_marker_add_set(GtkScintilla *sci, int line, int set);
void gtk_scintilla_marker_set_alpha(GtkScintilla *sci, int marker_number, int alpha);
#define SC_MARGIN_SYMBOL 0
#define SC_MARGIN_NUMBER 1
#define SC_MARGIN_BACK 2
#define SC_MARGIN_FORE 3
void gtk_scintilla_set_margin_type_n(GtkScintilla *sci, int margin, int margin_type);
int gtk_scintilla_get_margin_type_n(GtkScintilla *sci, int margin);
void gtk_scintilla_set_margin_width_n(GtkScintilla *sci, int margin, int pixel_width);
int gtk_scintilla_get_margin_width_n(GtkScintilla *sci, int margin);
void gtk_scintilla_set_margin_mask_n(GtkScintilla *sci, int margin, int mask);
int gtk_scintilla_get_margin_mask_n(GtkScintilla *sci, int margin);
void gtk_scintilla_set_margin_sensitive_n(GtkScintilla *sci, int margin, gint sensitive);
gint gtk_scintilla_get_margin_sensitive_n(GtkScintilla *sci, int margin);
#define STYLE_DEFAULT 32
#define STYLE_LINENUMBER 33
#define STYLE_BRACELIGHT 34
#define STYLE_BRACEBAD 35
#define STYLE_CONTROLCHAR 36
#define STYLE_INDENTGUIDE 37
#define STYLE_CALLTIP 38
#define STYLE_LASTPREDEFINED 39
#define STYLE_MAX 127
#define SC_CHARSET_ANSI 0
#define SC_CHARSET_DEFAULT 1
#define SC_CHARSET_BALTIC 186
#define SC_CHARSET_CHINESEBIG5 136
#define SC_CHARSET_EASTEUROPE 238
#define SC_CHARSET_GB2312 134
#define SC_CHARSET_GREEK 161
#define SC_CHARSET_HANGUL 129
#define SC_CHARSET_MAC 77
#define SC_CHARSET_OEM 255
#define SC_CHARSET_RUSSIAN 204
#define SC_CHARSET_CYRILLIC 1251
#define SC_CHARSET_SHIFTJIS 128
#define SC_CHARSET_SYMBOL 2
#define SC_CHARSET_TURKISH 162
#define SC_CHARSET_JOHAB 130
#define SC_CHARSET_HEBREW 177
#define SC_CHARSET_ARABIC 178
#define SC_CHARSET_VIETNAMESE 163
#define SC_CHARSET_THAI 222
#define SC_CHARSET_8859_15 1000
void gtk_scintilla_style_clear_all(GtkScintilla *sci);
void gtk_scintilla_style_set_fore(GtkScintilla *sci, int style, glong fore);
void gtk_scintilla_style_set_back(GtkScintilla *sci, int style, glong back);
void gtk_scintilla_style_set_bold(GtkScintilla *sci, int style, gint bold);
void gtk_scintilla_style_set_italic(GtkScintilla *sci, int style, gint italic);
void gtk_scintilla_style_set_size(GtkScintilla *sci, int style, int size_points);
void gtk_scintilla_style_set_font(GtkScintilla *sci, int style, const gchar * font_name);
void gtk_scintilla_style_set_eol_filled(GtkScintilla *sci, int style, gint filled);
void gtk_scintilla_style_reset_default(GtkScintilla *sci);
void gtk_scintilla_style_set_underline(GtkScintilla *sci, int style, gint underline);
#define SC_CASE_MIXED 0
#define SC_CASE_UPPER 1
#define SC_CASE_LOWER 2
void gtk_scintilla_style_set_case(GtkScintilla *sci, int style, int case_force);
void gtk_scintilla_style_set_character_set(GtkScintilla *sci, int style, int character_set);
void gtk_scintilla_style_set_hot_spot(GtkScintilla *sci, int style, gint hotspot);
void gtk_scintilla_set_sel_fore(GtkScintilla *sci, gint use_setting, glong fore);
void gtk_scintilla_set_sel_back(GtkScintilla *sci, gint use_setting, glong back);
int gtk_scintilla_get_sel_alpha(GtkScintilla *sci);
void gtk_scintilla_set_sel_alpha(GtkScintilla *sci, int alpha);
void gtk_scintilla_set_caret_fore(GtkScintilla *sci, glong fore);
void gtk_scintilla_clear_all_cmd_keys(GtkScintilla *sci);
void gtk_scintilla_set_styling_ex(GtkScintilla *sci, int length, const gchar * styles);
void gtk_scintilla_style_set_visible(GtkScintilla *sci, int style, gint visible);
int gtk_scintilla_get_caret_period(GtkScintilla *sci);
void gtk_scintilla_set_caret_period(GtkScintilla *sci, int period_milliseconds);
void gtk_scintilla_set_word_chars(GtkScintilla *sci, const gchar * characters);
void gtk_scintilla_begin_undo_action(GtkScintilla *sci);
void gtk_scintilla_end_undo_action(GtkScintilla *sci);
#define INDIC_MAX 7
#define INDIC_PLAIN 0
#define INDIC_SQUIGGLE 1
#define INDIC_TT 2
#define INDIC_DIAGONAL 3
#define INDIC_STRIKE 4
#define INDIC_HIDDEN 5
#define INDIC_BOX 6
#define INDIC_ROUNDBOX 7
#define INDIC0_MASK 0x20
#define INDIC1_MASK 0x40
#define INDIC2_MASK 0x80
#define INDICS_MASK 0xE0
void gtk_scintilla_indic_set_style(GtkScintilla *sci, int indic, int style);
int gtk_scintilla_indic_get_style(GtkScintilla *sci, int indic);
void gtk_scintilla_indic_set_fore(GtkScintilla *sci, int indic, glong fore);
glong gtk_scintilla_indic_get_fore(GtkScintilla *sci, int indic);
void gtk_scintilla_set_whitespace_fore(GtkScintilla *sci, gint use_setting, glong fore);
void gtk_scintilla_set_whitespace_back(GtkScintilla *sci, gint use_setting, glong back);
void gtk_scintilla_set_style_bits(GtkScintilla *sci, int bits);
int gtk_scintilla_get_style_bits(GtkScintilla *sci);
void gtk_scintilla_set_line_state(GtkScintilla *sci, int line, int state);
int gtk_scintilla_get_line_state(GtkScintilla *sci, int line);
int gtk_scintilla_get_max_line_state(GtkScintilla *sci);
gint gtk_scintilla_get_caret_line_visible(GtkScintilla *sci);
void gtk_scintilla_set_caret_line_visible(GtkScintilla *sci, gint show);
glong gtk_scintilla_get_caret_line_back(GtkScintilla *sci);
void gtk_scintilla_set_caret_line_back(GtkScintilla *sci, glong back);
void gtk_scintilla_style_set_changeable(GtkScintilla *sci, int style, gint changeable);
void gtk_scintilla_autoc_show(GtkScintilla *sci, int len_entered, const gchar * item_list);
void gtk_scintilla_autoc_cancel(GtkScintilla *sci);
gint gtk_scintilla_autoc_active(GtkScintilla *sci);
glong gtk_scintilla_autoc_pos_start(GtkScintilla *sci);
void gtk_scintilla_autoc_complete(GtkScintilla *sci);
void gtk_scintilla_autoc_stops(GtkScintilla *sci, const gchar * character_set);
void gtk_scintilla_autoc_set_separator(GtkScintilla *sci, int separator_character);
int gtk_scintilla_autoc_get_separator(GtkScintilla *sci);
void gtk_scintilla_autoc_select(GtkScintilla *sci, const gchar * text);
void gtk_scintilla_autoc_set_cancel_at_start(GtkScintilla *sci, gint cancel);
gint gtk_scintilla_autoc_get_cancel_at_start(GtkScintilla *sci);
void gtk_scintilla_autoc_set_fill_ups(GtkScintilla *sci, const gchar * character_set);
void gtk_scintilla_autoc_set_choose_single(GtkScintilla *sci, gint choose_single);
gint gtk_scintilla_autoc_get_choose_single(GtkScintilla *sci);
void gtk_scintilla_autoc_set_ignore_case(GtkScintilla *sci, gint ignore_case);
gint gtk_scintilla_autoc_get_ignore_case(GtkScintilla *sci);
void gtk_scintilla_user_list_show(GtkScintilla *sci, int list_type, const gchar * item_list);
void gtk_scintilla_autoc_set_auto_hide(GtkScintilla *sci, gint auto_hide);
gint gtk_scintilla_autoc_get_auto_hide(GtkScintilla *sci);
void gtk_scintilla_autoc_set_drop_rest_of_word(GtkScintilla *sci, gint drop_rest_of_word);
gint gtk_scintilla_autoc_get_drop_rest_of_word(GtkScintilla *sci);
void gtk_scintilla_register_image(GtkScintilla *sci, int type, const gchar * xpm_data);
void gtk_scintilla_clear_registered_images(GtkScintilla *sci);
int gtk_scintilla_autoc_get_type_separator(GtkScintilla *sci);
void gtk_scintilla_autoc_set_type_separator(GtkScintilla *sci, int separator_character);
void gtk_scintilla_autoc_set_max_width(GtkScintilla *sci, int character_count);
int gtk_scintilla_autoc_get_max_width(GtkScintilla *sci);
void gtk_scintilla_autoc_set_max_height(GtkScintilla *sci, int row_count);
int gtk_scintilla_autoc_get_max_height(GtkScintilla *sci);
void gtk_scintilla_set_indent(GtkScintilla *sci, int indent_size);
int gtk_scintilla_get_indent(GtkScintilla *sci);
void gtk_scintilla_set_use_tabs(GtkScintilla *sci, gint use_tabs);
gint gtk_scintilla_get_use_tabs(GtkScintilla *sci);
void gtk_scintilla_set_line_indentation(GtkScintilla *sci, int line, int indent_size);
int gtk_scintilla_get_line_indentation(GtkScintilla *sci, int line);
glong gtk_scintilla_get_line_indent_position(GtkScintilla *sci, int line);
int gtk_scintilla_get_column(GtkScintilla *sci, glong pos);
void gtk_scintilla_set_h_scroll_bar(GtkScintilla *sci, gint show);
gint gtk_scintilla_get_h_scroll_bar(GtkScintilla *sci);
void gtk_scintilla_set_indentation_guides(GtkScintilla *sci, gint show);
gint gtk_scintilla_get_indentation_guides(GtkScintilla *sci);
void gtk_scintilla_set_highlight_guide(GtkScintilla *sci, int column);
int gtk_scintilla_get_highlight_guide(GtkScintilla *sci);
int gtk_scintilla_get_line_end_position(GtkScintilla *sci, int line);
int gtk_scintilla_get_code_page(GtkScintilla *sci);
glong gtk_scintilla_get_caret_fore(GtkScintilla *sci);
gint gtk_scintilla_get_use_palette(GtkScintilla *sci);
gint gtk_scintilla_get_read_only(GtkScintilla *sci);
void gtk_scintilla_set_current_pos(GtkScintilla *sci, glong pos);
void gtk_scintilla_set_selection_start(GtkScintilla *sci, glong pos);
glong gtk_scintilla_get_selection_start(GtkScintilla *sci);
void gtk_scintilla_set_selection_end(GtkScintilla *sci, glong pos);
glong gtk_scintilla_get_selection_end(GtkScintilla *sci);
void gtk_scintilla_set_print_magnification(GtkScintilla *sci, int magnification);
int gtk_scintilla_get_print_magnification(GtkScintilla *sci);
#define SC_PRINT_NORMAL 0
#define SC_PRINT_INVERTLIGHT 1
#define SC_PRINT_BLACKONWHITE 2
#define SC_PRINT_COLOURONWHITE 3
#define SC_PRINT_COLOURONWHITEDEFAULTBG 4
void gtk_scintilla_set_print_colour_mode(GtkScintilla *sci, int mode);
int gtk_scintilla_get_print_colour_mode(GtkScintilla *sci);
#define SCFIND_WHOLEWORD 2
#define SCFIND_MATCHCASE 4
#define SCFIND_WORDSTART 0x00100000
#define SCFIND_REGEXP 0x00200000
#define SCFIND_POSIX 0x00400000
int gtk_scintilla_get_first_visible_line(GtkScintilla *sci);
int gtk_scintilla_get_line(GtkScintilla *sci, int line, gchar * text);
int gtk_scintilla_get_line_count(GtkScintilla *sci);
void gtk_scintilla_set_margin_left(GtkScintilla *sci, int pixel_width);
int gtk_scintilla_get_margin_left(GtkScintilla *sci);
void gtk_scintilla_set_margin_right(GtkScintilla *sci, int pixel_width);
int gtk_scintilla_get_margin_right(GtkScintilla *sci);
gint gtk_scintilla_get_modify(GtkScintilla *sci);
void gtk_scintilla_set_sel(GtkScintilla *sci, glong start, glong end);
int gtk_scintilla_get_sel_text(GtkScintilla *sci, gchar * text);
void gtk_scintilla_hide_selection(GtkScintilla *sci, gint normal);
int gtk_scintilla_point_x_from_position(GtkScintilla *sci, glong pos);
int gtk_scintilla_point_y_from_position(GtkScintilla *sci, glong pos);
int gtk_scintilla_line_from_position(GtkScintilla *sci, glong pos);
glong gtk_scintilla_position_from_line(GtkScintilla *sci, int line);
void gtk_scintilla_line_scroll(GtkScintilla *sci, int columns, int lines);
void gtk_scintilla_scroll_caret(GtkScintilla *sci);
void gtk_scintilla_replace_sel(GtkScintilla *sci, const gchar * text);
void gtk_scintilla_set_read_only(GtkScintilla *sci, gint read_only);
void gtk_scintilla_null(GtkScintilla *sci);
gint gtk_scintilla_can_paste(GtkScintilla *sci);
gint gtk_scintilla_can_undo(GtkScintilla *sci);
void gtk_scintilla_empty_undo_buffer(GtkScintilla *sci);
void gtk_scintilla_undo(GtkScintilla *sci);
void gtk_scintilla_cut(GtkScintilla *sci);
void gtk_scintilla_copy(GtkScintilla *sci);
void gtk_scintilla_paste(GtkScintilla *sci);
void gtk_scintilla_clear(GtkScintilla *sci);
void gtk_scintilla_set_text(GtkScintilla *sci, const gchar * text);
int gtk_scintilla_get_text(GtkScintilla *sci, int length, gchar * text);
int gtk_scintilla_get_text_length(GtkScintilla *sci);
int gtk_scintilla_get_direct_function(GtkScintilla *sci);
int gtk_scintilla_get_direct_pointer(GtkScintilla *sci);
void gtk_scintilla_set_overtype(GtkScintilla *sci, gint overtype);
gint gtk_scintilla_get_overtype(GtkScintilla *sci);
void gtk_scintilla_set_caret_width(GtkScintilla *sci, int pixel_width);
int gtk_scintilla_get_caret_width(GtkScintilla *sci);
void gtk_scintilla_set_target_start(GtkScintilla *sci, glong pos);
glong gtk_scintilla_get_target_start(GtkScintilla *sci);
void gtk_scintilla_set_target_end(GtkScintilla *sci, glong pos);
glong gtk_scintilla_get_target_end(GtkScintilla *sci);
int gtk_scintilla_replace_target(GtkScintilla *sci, int length, const gchar * text);
int gtk_scintilla_replace_target_re(GtkScintilla *sci, int length, const gchar * text);
int gtk_scintilla_search_in_target(GtkScintilla *sci, int length, const gchar * text);
void gtk_scintilla_set_search_flags(GtkScintilla *sci, int flags);
int gtk_scintilla_get_search_flags(GtkScintilla *sci);
void gtk_scintilla_call_tip_show(GtkScintilla *sci, glong pos, const gchar * definition);
void gtk_scintilla_call_tip_cancel(GtkScintilla *sci);
gint gtk_scintilla_call_tip_active(GtkScintilla *sci);
glong gtk_scintilla_call_tip_pos_start(GtkScintilla *sci);
void gtk_scintilla_call_tip_set_hlt(GtkScintilla *sci, int start, int end);
void gtk_scintilla_call_tip_set_back(GtkScintilla *sci, glong back);
void gtk_scintilla_call_tip_set_fore(GtkScintilla *sci, glong fore);
void gtk_scintilla_call_tip_set_fore_hlt(GtkScintilla *sci, glong fore);
void gtk_scintilla_call_tip_use_style(GtkScintilla *sci, int tab_size);
int gtk_scintilla_visible_from_doc_line(GtkScintilla *sci, int line);
int gtk_scintilla_doc_line_from_visible(GtkScintilla *sci, int line_display);
int gtk_scintilla_wrap_count(GtkScintilla *sci, int line);
#define SC_FOLDLEVELBASE 0x400
#define SC_FOLDLEVELWHITEFLAG 0x1000
#define SC_FOLDLEVELHEADERFLAG 0x2000
#define SC_FOLDLEVELBOXHEADERFLAG 0x4000
#define SC_FOLDLEVELBOXFOOTERFLAG 0x8000
#define SC_FOLDLEVELCONTRACTED 0x10000
#define SC_FOLDLEVELUNINDENT 0x20000
#define SC_FOLDLEVELNUMBERMASK 0x0FFF
void gtk_scintilla_set_fold_level(GtkScintilla *sci, int line, int level);
int gtk_scintilla_get_fold_level(GtkScintilla *sci, int line);
int gtk_scintilla_get_last_child(GtkScintilla *sci, int line, int level);
int gtk_scintilla_get_fold_parent(GtkScintilla *sci, int line);
void gtk_scintilla_show_lines(GtkScintilla *sci, int line_start, int line_end);
void gtk_scintilla_hide_lines(GtkScintilla *sci, int line_start, int line_end);
gint gtk_scintilla_get_line_visible(GtkScintilla *sci, int line);
void gtk_scintilla_set_fold_expanded(GtkScintilla *sci, int line, gint expanded);
gint gtk_scintilla_get_fold_expanded(GtkScintilla *sci, int line);
void gtk_scintilla_toggle_fold(GtkScintilla *sci, int line);
void gtk_scintilla_ensure_visible(GtkScintilla *sci, int line);
#define SC_FOLDFLAG_LINEBEFORE_EXPANDED 0x0002
#define SC_FOLDFLAG_LINEBEFORE_CONTRACTED 0x0004
#define SC_FOLDFLAG_LINEAFTER_EXPANDED 0x0008
#define SC_FOLDFLAG_LINEAFTER_CONTRACTED 0x0010
#define SC_FOLDFLAG_LEVELNUMBERS 0x0040
#define SC_FOLDFLAG_BOX 0x0001
void gtk_scintilla_set_fold_flags(GtkScintilla *sci, int flags);
void gtk_scintilla_ensure_visible_enforce_policy(GtkScintilla *sci, int line);
void gtk_scintilla_set_tab_indents(GtkScintilla *sci, gint tab_indents);
gint gtk_scintilla_get_tab_indents(GtkScintilla *sci);
void gtk_scintilla_set_backspace_unindents(GtkScintilla *sci, gint bs_unindents);
gint gtk_scintilla_get_backspace_unindents(GtkScintilla *sci);
#define SC_TIME_FOREVER 10000000
void gtk_scintilla_set_mouse_dwell_time(GtkScintilla *sci, int period_milliseconds);
int gtk_scintilla_get_mouse_dwell_time(GtkScintilla *sci);
int gtk_scintilla_word_start_position(GtkScintilla *sci, glong pos, gint only_word_characters);
int gtk_scintilla_word_end_position(GtkScintilla *sci, glong pos, gint only_word_characters);
#define SC_WRAP_NONE 0
#define SC_WRAP_WORD 1
#define SC_WRAP_CHAR 2
void gtk_scintilla_set_wrap_mode(GtkScintilla *sci, int mode);
int gtk_scintilla_get_wrap_mode(GtkScintilla *sci);
#define SC_WRAPVISUALFLAG_NONE 0x0000
#define SC_WRAPVISUALFLAG_END 0x0001
#define SC_WRAPVISUALFLAG_START 0x0002
void gtk_scintilla_set_wrap_visual_flags(GtkScintilla *sci, int wrap_visual_flags);
int gtk_scintilla_get_wrap_visual_flags(GtkScintilla *sci);
#define SC_WRAPVISUALFLAGLOC_DEFAULT 0x0000
#define SC_WRAPVISUALFLAGLOC_END_BY_TEXT 0x0001
#define SC_WRAPVISUALFLAGLOC_START_BY_TEXT 0x0002
void gtk_scintilla_set_wrap_visual_flags_location(GtkScintilla *sci, int wrap_visual_flags_location);
int gtk_scintilla_get_wrap_visual_flags_location(GtkScintilla *sci);
void gtk_scintilla_set_wrap_start_indent(GtkScintilla *sci, int indent);
int gtk_scintilla_get_wrap_start_indent(GtkScintilla *sci);
#define SC_CACHE_NONE 0
#define SC_CACHE_CARET 1
#define SC_CACHE_PAGE 2
#define SC_CACHE_DOCUMENT 3
void gtk_scintilla_set_layout_cache(GtkScintilla *sci, int mode);
int gtk_scintilla_get_layout_cache(GtkScintilla *sci);
void gtk_scintilla_set_scroll_width(GtkScintilla *sci, int pixel_width);
int gtk_scintilla_get_scroll_width(GtkScintilla *sci);
int gtk_scintilla_text_width(GtkScintilla *sci, int style, const gchar * text);
void gtk_scintilla_set_end_at_last_line(GtkScintilla *sci, gint end_at_last_line);
gint gtk_scintilla_get_end_at_last_line(GtkScintilla *sci);
int gtk_scintilla_text_height(GtkScintilla *sci, int line);
void gtk_scintilla_set_v_scroll_bar(GtkScintilla *sci, gint show);
gint gtk_scintilla_get_v_scroll_bar(GtkScintilla *sci);
void gtk_scintilla_append_text(GtkScintilla *sci, int length, const gchar * text);
gint gtk_scintilla_get_two_phase_draw(GtkScintilla *sci);
void gtk_scintilla_set_two_phase_draw(GtkScintilla *sci, gint two_phase);
void gtk_scintilla_target_from_selection(GtkScintilla *sci);
void gtk_scintilla_lines_join(GtkScintilla *sci);
void gtk_scintilla_lines_split(GtkScintilla *sci, int pixel_width);
void gtk_scintilla_set_fold_margin_colour(GtkScintilla *sci, gint use_setting, glong back);
void gtk_scintilla_set_fold_margin_hi_colour(GtkScintilla *sci, gint use_setting, glong fore);
void gtk_scintilla_line_down(GtkScintilla *sci);
void gtk_scintilla_line_down_extend(GtkScintilla *sci);
void gtk_scintilla_line_up(GtkScintilla *sci);
void gtk_scintilla_line_up_extend(GtkScintilla *sci);
void gtk_scintilla_char_left(GtkScintilla *sci);
void gtk_scintilla_char_left_extend(GtkScintilla *sci);
void gtk_scintilla_char_right(GtkScintilla *sci);
void gtk_scintilla_char_right_extend(GtkScintilla *sci);
void gtk_scintilla_word_left(GtkScintilla *sci);
void gtk_scintilla_word_left_extend(GtkScintilla *sci);
void gtk_scintilla_word_right(GtkScintilla *sci);
void gtk_scintilla_word_right_extend(GtkScintilla *sci);
void gtk_scintilla_home(GtkScintilla *sci);
void gtk_scintilla_home_extend(GtkScintilla *sci);
void gtk_scintilla_line_end(GtkScintilla *sci);
void gtk_scintilla_line_end_extend(GtkScintilla *sci);
void gtk_scintilla_document_start(GtkScintilla *sci);
void gtk_scintilla_document_start_extend(GtkScintilla *sci);
void gtk_scintilla_document_end(GtkScintilla *sci);
void gtk_scintilla_document_end_extend(GtkScintilla *sci);
void gtk_scintilla_page_up(GtkScintilla *sci);
void gtk_scintilla_page_up_extend(GtkScintilla *sci);
void gtk_scintilla_page_down(GtkScintilla *sci);
void gtk_scintilla_page_down_extend(GtkScintilla *sci);
void gtk_scintilla_edit_toggle_overtype(GtkScintilla *sci);
void gtk_scintilla_cancel(GtkScintilla *sci);
void gtk_scintilla_delete_back(GtkScintilla *sci);
void gtk_scintilla_tab(GtkScintilla *sci);
void gtk_scintilla_back_tab(GtkScintilla *sci);
void gtk_scintilla_new_line(GtkScintilla *sci);
void gtk_scintilla_form_feed(GtkScintilla *sci);
void gtk_scintilla_v_c_home(GtkScintilla *sci);
void gtk_scintilla_v_c_home_extend(GtkScintilla *sci);
void gtk_scintilla_zoom_in(GtkScintilla *sci);
void gtk_scintilla_zoom_out(GtkScintilla *sci);
void gtk_scintilla_del_word_left(GtkScintilla *sci);
void gtk_scintilla_del_word_right(GtkScintilla *sci);
void gtk_scintilla_line_cut(GtkScintilla *sci);
void gtk_scintilla_line_delete(GtkScintilla *sci);
void gtk_scintilla_line_transpose(GtkScintilla *sci);
void gtk_scintilla_line_duplicate(GtkScintilla *sci);
void gtk_scintilla_lower_case(GtkScintilla *sci);
void gtk_scintilla_upper_case(GtkScintilla *sci);
void gtk_scintilla_line_scroll_down(GtkScintilla *sci);
void gtk_scintilla_line_scroll_up(GtkScintilla *sci);
void gtk_scintilla_delete_back_not_line(GtkScintilla *sci);
void gtk_scintilla_home_display(GtkScintilla *sci);
void gtk_scintilla_home_display_extend(GtkScintilla *sci);
void gtk_scintilla_line_end_display(GtkScintilla *sci);
void gtk_scintilla_line_end_display_extend(GtkScintilla *sci);
void gtk_scintilla_home_wrap(GtkScintilla *sci);
void gtk_scintilla_home_wrap_extend(GtkScintilla *sci);
void gtk_scintilla_line_end_wrap(GtkScintilla *sci);
void gtk_scintilla_line_end_wrap_extend(GtkScintilla *sci);
void gtk_scintilla_v_c_home_wrap(GtkScintilla *sci);
void gtk_scintilla_v_c_home_wrap_extend(GtkScintilla *sci);
void gtk_scintilla_line_copy(GtkScintilla *sci);
void gtk_scintilla_move_caret_inside_view(GtkScintilla *sci);
int gtk_scintilla_line_length(GtkScintilla *sci, int line);
void gtk_scintilla_brace_highlight(GtkScintilla *sci, glong pos1, glong pos2);
void gtk_scintilla_brace_bad_light(GtkScintilla *sci, glong pos);
glong gtk_scintilla_brace_match(GtkScintilla *sci, glong pos);
gint gtk_scintilla_get_view_eol(GtkScintilla *sci);
void gtk_scintilla_set_view_eol(GtkScintilla *sci, gint visible);
int gtk_scintilla_get_doc_pointer(GtkScintilla *sci);
void gtk_scintilla_set_doc_pointer(GtkScintilla *sci, int pointer);
void gtk_scintilla_set_mod_event_mask(GtkScintilla *sci, int mask);
#define EDGE_NONE 0
#define EDGE_LINE 1
#define EDGE_BACKGROUND 2
int gtk_scintilla_get_edge_column(GtkScintilla *sci);
void gtk_scintilla_set_edge_column(GtkScintilla *sci, int column);
int gtk_scintilla_get_edge_mode(GtkScintilla *sci);
void gtk_scintilla_set_edge_mode(GtkScintilla *sci, int mode);
glong gtk_scintilla_get_edge_colour(GtkScintilla *sci);
void gtk_scintilla_set_edge_colour(GtkScintilla *sci, glong edge_colour);
void gtk_scintilla_search_anchor(GtkScintilla *sci);
int gtk_scintilla_search_next(GtkScintilla *sci, int flags, const gchar * text);
int gtk_scintilla_search_prev(GtkScintilla *sci, int flags, const gchar * text);
int gtk_scintilla_lines_on_screen(GtkScintilla *sci);
void gtk_scintilla_use_pop_up(GtkScintilla *sci, gint allow_pop_up);
gint gtk_scintilla_selection_is_rectangle(GtkScintilla *sci);
void gtk_scintilla_set_zoom(GtkScintilla *sci, int zoom);
int gtk_scintilla_get_zoom(GtkScintilla *sci);
int gtk_scintilla_create_document(GtkScintilla *sci);
void gtk_scintilla_add_ref_document(GtkScintilla *sci, int doc);
void gtk_scintilla_release_document(GtkScintilla *sci, int doc);
int gtk_scintilla_get_mod_event_mask(GtkScintilla *sci);
void gtk_scintilla_set_focus(GtkScintilla *sci, gint focus);
gint gtk_scintilla_get_focus(GtkScintilla *sci);
void gtk_scintilla_set_status(GtkScintilla *sci, int status_code);
int gtk_scintilla_get_status(GtkScintilla *sci);
void gtk_scintilla_set_mouse_down_captures(GtkScintilla *sci, gint captures);
gint gtk_scintilla_get_mouse_down_captures(GtkScintilla *sci);
#define SC_CURSORNORMAL -1
#define SC_CURSORWAIT 4
void gtk_scintilla_set_cursor(GtkScintilla *sci, int cursor_type);
int gtk_scintilla_get_cursor(GtkScintilla *sci);
void gtk_scintilla_set_control_char_symbol(GtkScintilla *sci, int symbol);
int gtk_scintilla_get_control_char_symbol(GtkScintilla *sci);
void gtk_scintilla_word_part_left(GtkScintilla *sci);
void gtk_scintilla_word_part_left_extend(GtkScintilla *sci);
void gtk_scintilla_word_part_right(GtkScintilla *sci);
void gtk_scintilla_word_part_right_extend(GtkScintilla *sci);
#define VISIBLE_SLOP 0x01
#define VISIBLE_STRICT 0x04
void gtk_scintilla_set_visible_policy(GtkScintilla *sci, int visible_policy, int visible_slop);
void gtk_scintilla_del_line_left(GtkScintilla *sci);
void gtk_scintilla_del_line_right(GtkScintilla *sci);
void gtk_scintilla_set_x_offset(GtkScintilla *sci, int new_offset);
int gtk_scintilla_get_x_offset(GtkScintilla *sci);
void gtk_scintilla_choose_caret_x(GtkScintilla *sci);
void gtk_scintilla_grab_focus(GtkScintilla *sci);
#define CARET_SLOP 0x01
#define CARET_STRICT 0x04
#define CARET_JUMPS 0x10
#define CARET_EVEN 0x08
void gtk_scintilla_set_x_caret_policy(GtkScintilla *sci, int caret_policy, int caret_slop);
void gtk_scintilla_set_y_caret_policy(GtkScintilla *sci, int caret_policy, int caret_slop);
void gtk_scintilla_set_print_wrap_mode(GtkScintilla *sci, int mode);
int gtk_scintilla_get_print_wrap_mode(GtkScintilla *sci);
void gtk_scintilla_set_hotspot_active_fore(GtkScintilla *sci, gint use_setting, glong fore);
void gtk_scintilla_set_hotspot_active_back(GtkScintilla *sci, gint use_setting, glong back);
void gtk_scintilla_set_hotspot_active_underline(GtkScintilla *sci, gint underline);
void gtk_scintilla_set_hotspot_single_line(GtkScintilla *sci, gint single_line);
void gtk_scintilla_para_down(GtkScintilla *sci);
void gtk_scintilla_para_down_extend(GtkScintilla *sci);
void gtk_scintilla_para_up(GtkScintilla *sci);
void gtk_scintilla_para_up_extend(GtkScintilla *sci);
glong gtk_scintilla_position_before(GtkScintilla *sci, glong pos);
glong gtk_scintilla_position_after(GtkScintilla *sci, glong pos);
void gtk_scintilla_copy_range(GtkScintilla *sci, glong start, glong end);
void gtk_scintilla_copy_text(GtkScintilla *sci, int length, const gchar * text);
#define SC_SEL_STREAM 0
#define SC_SEL_RECTANGLE 1
#define SC_SEL_LINES 2
void gtk_scintilla_set_selection_mode(GtkScintilla *sci, int mode);
int gtk_scintilla_get_selection_mode(GtkScintilla *sci);
glong gtk_scintilla_get_line_sel_start_position(GtkScintilla *sci, int line);
glong gtk_scintilla_get_line_sel_end_position(GtkScintilla *sci, int line);
void gtk_scintilla_line_down_rect_extend(GtkScintilla *sci);
void gtk_scintilla_line_up_rect_extend(GtkScintilla *sci);
void gtk_scintilla_char_left_rect_extend(GtkScintilla *sci);
void gtk_scintilla_char_right_rect_extend(GtkScintilla *sci);
void gtk_scintilla_home_rect_extend(GtkScintilla *sci);
void gtk_scintilla_v_c_home_rect_extend(GtkScintilla *sci);
void gtk_scintilla_line_end_rect_extend(GtkScintilla *sci);
void gtk_scintilla_page_up_rect_extend(GtkScintilla *sci);
void gtk_scintilla_page_down_rect_extend(GtkScintilla *sci);
void gtk_scintilla_stuttered_page_up(GtkScintilla *sci);
void gtk_scintilla_stuttered_page_up_extend(GtkScintilla *sci);
void gtk_scintilla_stuttered_page_down(GtkScintilla *sci);
void gtk_scintilla_stuttered_page_down_extend(GtkScintilla *sci);
void gtk_scintilla_word_left_end(GtkScintilla *sci);
void gtk_scintilla_word_left_end_extend(GtkScintilla *sci);
void gtk_scintilla_word_right_end(GtkScintilla *sci);
void gtk_scintilla_word_right_end_extend(GtkScintilla *sci);
void gtk_scintilla_set_whitespace_chars(GtkScintilla *sci, const gchar * characters);
void gtk_scintilla_set_chars_default(GtkScintilla *sci);
int gtk_scintilla_autoc_get_current(GtkScintilla *sci);
void gtk_scintilla_allocate(GtkScintilla *sci, int bytes);
int gtk_scintilla_target_as_u_t_f8(GtkScintilla *sci, gchar * s);
void gtk_scintilla_set_length_for_encode(GtkScintilla *sci, int bytes);
int gtk_scintilla_encoded_from_u_t_f8(GtkScintilla *sci, const gchar * utf8, gchar * encoded);
int gtk_scintilla_find_column(GtkScintilla *sci, int line, int column);
gint gtk_scintilla_get_caret_sticky(GtkScintilla *sci);
void gtk_scintilla_set_caret_sticky(GtkScintilla *sci, gint use_caret_sticky_behaviour);
void gtk_scintilla_toggle_caret_sticky(GtkScintilla *sci);
void gtk_scintilla_set_paste_convert_endings(GtkScintilla *sci, gint convert);
gint gtk_scintilla_get_paste_convert_endings(GtkScintilla *sci);
void gtk_scintilla_selection_duplicate(GtkScintilla *sci);
#define SC_ALPHA_TRANSPARENT 0
#define SC_ALPHA_OPAQUE 255
#define SC_ALPHA_NOALPHA 256
void gtk_scintilla_set_caret_line_back_alpha(GtkScintilla *sci, int alpha);
int gtk_scintilla_get_caret_line_back_alpha(GtkScintilla *sci);
void gtk_scintilla_start_record(GtkScintilla *sci);
void gtk_scintilla_stop_record(GtkScintilla *sci);
void gtk_scintilla_set_lexer(GtkScintilla *sci, int lexer);
int gtk_scintilla_get_lexer(GtkScintilla *sci);
void gtk_scintilla_colourise(GtkScintilla *sci, glong start, glong end);
void gtk_scintilla_set_property(GtkScintilla *sci, const gchar * key, const gchar * value);
#define KEYWORDSET_MAX 8
void gtk_scintilla_set_keywords(GtkScintilla *sci, int keyword_set, const gchar * key_words);
void gtk_scintilla_set_lexer_language(GtkScintilla *sci, const gchar * language);
void gtk_scintilla_load_lexer_library(GtkScintilla *sci, const gchar * path);
int gtk_scintilla_get_property(GtkScintilla *sci, const gchar * key, gchar * buf);
int gtk_scintilla_get_property_expanded(GtkScintilla *sci, const gchar * key, gchar * buf);
int gtk_scintilla_get_property_int(GtkScintilla *sci, const gchar * key);
int gtk_scintilla_get_style_bits_needed(GtkScintilla *sci);
#define SC_MOD_INSERTTEXT 0x1
#define SC_MOD_DELETETEXT 0x2
#define SC_MOD_CHANGESTYLE 0x4
#define SC_MOD_CHANGEFOLD 0x8
#define SC_PERFORMED_USER 0x10
#define SC_PERFORMED_UNDO 0x20
#define SC_PERFORMED_REDO 0x40
#define SC_MULTISTEPUNDOREDO 0x80
#define SC_LASTSTEPINUNDOREDO 0x100
#define SC_MOD_CHANGEMARKER 0x200
#define SC_MOD_BEFOREINSERT 0x400
#define SC_MOD_BEFOREDELETE 0x800
#define SC_MULTILINEUNDOREDO 0x1000
#define SC_MODEVENTMASKALL 0x1FFF
#define SCEN_CHANGE 768
#define SCEN_SETFOCUS 512
#define SCEN_KILLFOCUS 256
#define SCK_DOWN 300
#define SCK_UP 301
#define SCK_LEFT 302
#define SCK_RIGHT 303
#define SCK_HOME 304
#define SCK_END 305
#define SCK_PRIOR 306
#define SCK_NEXT 307
#define SCK_DELETE 308
#define SCK_INSERT 309
#define SCK_ESCAPE 7
#define SCK_BACK 8
#define SCK_TAB 9
#define SCK_RETURN 13
#define SCK_ADD 310
#define SCK_SUBTRACT 311
#define SCK_DIVIDE 312
#define SCMOD_NORM 0
#define SCMOD_SHIFT 1
#define SCMOD_CTRL 2
#define SCMOD_ALT 4
#define SCLEX_CONTAINER 0
#define SCLEX_NULL 1
#define SCLEX_PYTHON 2
#define SCLEX_CPP 3
#define SCLEX_HTML 4
#define SCLEX_XML 5
#define SCLEX_PERL 6
#define SCLEX_SQL 7
#define SCLEX_VB 8
#define SCLEX_PROPERTIES 9
#define SCLEX_ERRORLIST 10
#define SCLEX_MAKEFILE 11
#define SCLEX_BATCH 12
#define SCLEX_XCODE 13
#define SCLEX_LATEX 14
#define SCLEX_LUA 15
#define SCLEX_DIFF 16
#define SCLEX_CONF 17
#define SCLEX_PASCAL 18
#define SCLEX_AVE 19
#define SCLEX_ADA 20
#define SCLEX_LISP 21
#define SCLEX_RUBY 22
#define SCLEX_EIFFEL 23
#define SCLEX_EIFFELKW 24
#define SCLEX_TCL 25
#define SCLEX_NNCRONTAB 26
#define SCLEX_BULLANT 27
#define SCLEX_VBSCRIPT 28
#define SCLEX_BAAN 31
#define SCLEX_MATLAB 32
#define SCLEX_SCRIPTOL 33
#define SCLEX_ASM 34
#define SCLEX_CPPNOCASE 35
#define SCLEX_FORTRAN 36
#define SCLEX_F77 37
#define SCLEX_CSS 38
#define SCLEX_POV 39
#define SCLEX_LOUT 40
#define SCLEX_ESCRIPT 41
#define SCLEX_PS 42
#define SCLEX_NSIS 43
#define SCLEX_MMIXAL 44
#define SCLEX_CLW 45
#define SCLEX_CLWNOCASE 46
#define SCLEX_LOT 47
#define SCLEX_YAML 48
#define SCLEX_TEX 49
#define SCLEX_METAPOST 50
#define SCLEX_POWERBASIC 51
#define SCLEX_FORTH 52
#define SCLEX_ERLANG 53
#define SCLEX_OCTAVE 54
#define SCLEX_MSSQL 55
#define SCLEX_VERILOG 56
#define SCLEX_KIX 57
#define SCLEX_GUI4CLI 58
#define SCLEX_SPECMAN 59
#define SCLEX_AU3 60
#define SCLEX_APDL 61
#define SCLEX_BASH 62
#define SCLEX_ASN1 63
#define SCLEX_VHDL 64
#define SCLEX_CAML 65
#define SCLEX_BLITZBASIC 66
#define SCLEX_PUREBASIC 67
#define SCLEX_HASKELL 68
#define SCLEX_PHPSCRIPT 69
#define SCLEX_TADS3 70
#define SCLEX_REBOL 71
#define SCLEX_SMALLTALK 72
#define SCLEX_FLAGSHIP 73
#define SCLEX_CSOUND 74
#define SCLEX_FREEBASIC 75
#define SCLEX_INNOSETUP 76
#define SCLEX_OPAL 77
#define SCLEX_SPICE 78
#define SCLEX_AUTOMATIC 1000
#define SCE_P_DEFAULT 0
#define SCE_P_COMMENTLINE 1
#define SCE_P_NUMBER 2
#define SCE_P_STRING 3
#define SCE_P_CHARACTER 4
#define SCE_P_WORD 5
#define SCE_P_TRIPLE 6
#define SCE_P_TRIPLEDOUBLE 7
#define SCE_P_CLASSNAME 8
#define SCE_P_DEFNAME 9
#define SCE_P_OPERATOR 10
#define SCE_P_IDENTIFIER 11
#define SCE_P_COMMENTBLOCK 12
#define SCE_P_STRINGEOL 13
#define SCE_P_WORD2 14
#define SCE_P_DECORATOR 15
#define SCE_C_DEFAULT 0
#define SCE_C_COMMENT 1
#define SCE_C_COMMENTLINE 2
#define SCE_C_COMMENTDOC 3
#define SCE_C_NUMBER 4
#define SCE_C_WORD 5
#define SCE_C_STRING 6
#define SCE_C_CHARACTER 7
#define SCE_C_UUID 8
#define SCE_C_PREPROCESSOR 9
#define SCE_C_OPERATOR 10
#define SCE_C_IDENTIFIER 11
#define SCE_C_STRINGEOL 12
#define SCE_C_VERBATIM 13
#define SCE_C_REGEX 14
#define SCE_C_COMMENTLINEDOC 15
#define SCE_C_WORD2 16
#define SCE_C_COMMENTDOCKEYWORD 17
#define SCE_C_COMMENTDOCKEYWORDERROR 18
#define SCE_C_GLOBALCLASS 19
#define SCE_TCL_DEFAULT 0
#define SCE_TCL_COMMENT 1
#define SCE_TCL_COMMENTLINE 2
#define SCE_TCL_NUMBER 3
#define SCE_TCL_WORD_IN_QUOTE 4
#define SCE_TCL_IN_QUOTE 5
#define SCE_TCL_OPERATOR 6
#define SCE_TCL_IDENTIFIER 7
#define SCE_TCL_SUBSTITUTION 8
#define SCE_TCL_SUB_BRACE 9
#define SCE_TCL_MODIFIER 10
#define SCE_TCL_EXPAND 11
#define SCE_TCL_WORD 12
#define SCE_TCL_WORD2 13
#define SCE_TCL_WORD3 14
#define SCE_TCL_WORD4 15
#define SCE_TCL_WORD5 16
#define SCE_TCL_WORD6 17
#define SCE_TCL_WORD7 18
#define SCE_TCL_WORD8 19
#define SCE_TCL_COMMENT_BOX 20
#define SCE_TCL_BLOCK_COMMENT 21
#define SCE_H_DEFAULT 0
#define SCE_H_TAG 1
#define SCE_H_TAGUNKNOWN 2
#define SCE_H_ATTRIBUTE 3
#define SCE_H_ATTRIBUTEUNKNOWN 4
#define SCE_H_NUMBER 5
#define SCE_H_DOUBLESTRING 6
#define SCE_H_SINGLESTRING 7
#define SCE_H_OTHER 8
#define SCE_H_COMMENT 9
#define SCE_H_ENTITY 10
#define SCE_H_TAGEND 11
#define SCE_H_XMLSTART 12
#define SCE_H_XMLEND 13
#define SCE_H_SCRIPT 14
#define SCE_H_ASP 15
#define SCE_H_ASPAT 16
#define SCE_H_CDATA 17
#define SCE_H_QUESTION 18
#define SCE_H_VALUE 19
#define SCE_H_XCCOMMENT 20
#define SCE_H_SGML_DEFAULT 21
#define SCE_H_SGML_COMMAND 22
#define SCE_H_SGML_1ST_PARAM 23
#define SCE_H_SGML_DOUBLESTRING 24
#define SCE_H_SGML_SIMPLESTRING 25
#define SCE_H_SGML_ERROR 26
#define SCE_H_SGML_SPECIAL 27
#define SCE_H_SGML_ENTITY 28
#define SCE_H_SGML_COMMENT 29
#define SCE_H_SGML_1ST_PARAM_COMMENT 30
#define SCE_H_SGML_BLOCK_DEFAULT 31
#define SCE_HJ_START 40
#define SCE_HJ_DEFAULT 41
#define SCE_HJ_COMMENT 42
#define SCE_HJ_COMMENTLINE 43
#define SCE_HJ_COMMENTDOC 44
#define SCE_HJ_NUMBER 45
#define SCE_HJ_WORD 46
#define SCE_HJ_KEYWORD 47
#define SCE_HJ_DOUBLESTRING 48
#define SCE_HJ_SINGLESTRING 49
#define SCE_HJ_SYMBOLS 50
#define SCE_HJ_STRINGEOL 51
#define SCE_HJ_REGEX 52
#define SCE_HJA_START 55
#define SCE_HJA_DEFAULT 56
#define SCE_HJA_COMMENT 57
#define SCE_HJA_COMMENTLINE 58
#define SCE_HJA_COMMENTDOC 59
#define SCE_HJA_NUMBER 60
#define SCE_HJA_WORD 61
#define SCE_HJA_KEYWORD 62
#define SCE_HJA_DOUBLESTRING 63
#define SCE_HJA_SINGLESTRING 64
#define SCE_HJA_SYMBOLS 65
#define SCE_HJA_STRINGEOL 66
#define SCE_HJA_REGEX 67
#define SCE_HB_START 70
#define SCE_HB_DEFAULT 71
#define SCE_HB_COMMENTLINE 72
#define SCE_HB_NUMBER 73
#define SCE_HB_WORD 74
#define SCE_HB_STRING 75
#define SCE_HB_IDENTIFIER 76
#define SCE_HB_STRINGEOL 77
#define SCE_HBA_START 80
#define SCE_HBA_DEFAULT 81
#define SCE_HBA_COMMENTLINE 82
#define SCE_HBA_NUMBER 83
#define SCE_HBA_WORD 84
#define SCE_HBA_STRING 85
#define SCE_HBA_IDENTIFIER 86
#define SCE_HBA_STRINGEOL 87
#define SCE_HP_START 90
#define SCE_HP_DEFAULT 91
#define SCE_HP_COMMENTLINE 92
#define SCE_HP_NUMBER 93
#define SCE_HP_STRING 94
#define SCE_HP_CHARACTER 95
#define SCE_HP_WORD 96
#define SCE_HP_TRIPLE 97
#define SCE_HP_TRIPLEDOUBLE 98
#define SCE_HP_CLASSNAME 99
#define SCE_HP_DEFNAME 100
#define SCE_HP_OPERATOR 101
#define SCE_HP_IDENTIFIER 102
#define SCE_HPHP_COMPLEX_VARIABLE 104
#define SCE_HPA_START 105
#define SCE_HPA_DEFAULT 106
#define SCE_HPA_COMMENTLINE 107
#define SCE_HPA_NUMBER 108
#define SCE_HPA_STRING 109
#define SCE_HPA_CHARACTER 110
#define SCE_HPA_WORD 111
#define SCE_HPA_TRIPLE 112
#define SCE_HPA_TRIPLEDOUBLE 113
#define SCE_HPA_CLASSNAME 114
#define SCE_HPA_DEFNAME 115
#define SCE_HPA_OPERATOR 116
#define SCE_HPA_IDENTIFIER 117
#define SCE_HPHP_DEFAULT 118
#define SCE_HPHP_HSTRING 119
#define SCE_HPHP_SIMPLESTRING 120
#define SCE_HPHP_WORD 121
#define SCE_HPHP_NUMBER 122
#define SCE_HPHP_VARIABLE 123
#define SCE_HPHP_COMMENT 124
#define SCE_HPHP_COMMENTLINE 125
#define SCE_HPHP_HSTRING_VARIABLE 126
#define SCE_HPHP_OPERATOR 127
#define SCE_PL_DEFAULT 0
#define SCE_PL_ERROR 1
#define SCE_PL_COMMENTLINE 2
#define SCE_PL_POD 3
#define SCE_PL_NUMBER 4
#define SCE_PL_WORD 5
#define SCE_PL_STRING 6
#define SCE_PL_CHARACTER 7
#define SCE_PL_PUNCTUATION 8
#define SCE_PL_PREPROCESSOR 9
#define SCE_PL_OPERATOR 10
#define SCE_PL_IDENTIFIER 11
#define SCE_PL_SCALAR 12
#define SCE_PL_ARRAY 13
#define SCE_PL_HASH 14
#define SCE_PL_SYMBOLTABLE 15
#define SCE_PL_VARIABLE_INDEXER 16
#define SCE_PL_REGEX 17
#define SCE_PL_REGSUBST 18
#define SCE_PL_LONGQUOTE 19
#define SCE_PL_BACKTICKS 20
#define SCE_PL_DATASECTION 21
#define SCE_PL_HERE_DELIM 22
#define SCE_PL_HERE_Q 23
#define SCE_PL_HERE_QQ 24
#define SCE_PL_HERE_QX 25
#define SCE_PL_STRING_Q 26
#define SCE_PL_STRING_QQ 27
#define SCE_PL_STRING_QX 28
#define SCE_PL_STRING_QR 29
#define SCE_PL_STRING_QW 30
#define SCE_PL_POD_VERB 31
#define SCE_RB_DEFAULT 0
#define SCE_RB_ERROR 1
#define SCE_RB_COMMENTLINE 2
#define SCE_RB_POD 3
#define SCE_RB_NUMBER 4
#define SCE_RB_WORD 5
#define SCE_RB_STRING 6
#define SCE_RB_CHARACTER 7
#define SCE_RB_CLASSNAME 8
#define SCE_RB_DEFNAME 9
#define SCE_RB_OPERATOR 10
#define SCE_RB_IDENTIFIER 11
#define SCE_RB_REGEX 12
#define SCE_RB_GLOBAL 13
#define SCE_RB_SYMBOL 14
#define SCE_RB_MODULE_NAME 15
#define SCE_RB_INSTANCE_VAR 16
#define SCE_RB_CLASS_VAR 17
#define SCE_RB_BACKTICKS 18
#define SCE_RB_DATASECTION 19
#define SCE_RB_HERE_DELIM 20
#define SCE_RB_HERE_Q 21
#define SCE_RB_HERE_QQ 22
#define SCE_RB_HERE_QX 23
#define SCE_RB_STRING_Q 24
#define SCE_RB_STRING_QQ 25
#define SCE_RB_STRING_QX 26
#define SCE_RB_STRING_QR 27
#define SCE_RB_STRING_QW 28
#define SCE_RB_WORD_DEMOTED 29
#define SCE_RB_STDIN 30
#define SCE_RB_STDOUT 31
#define SCE_RB_STDERR 40
#define SCE_RB_UPPER_BOUND 41
#define SCE_B_DEFAULT 0
#define SCE_B_COMMENT 1
#define SCE_B_NUMBER 2
#define SCE_B_KEYWORD 3
#define SCE_B_STRING 4
#define SCE_B_PREPROCESSOR 5
#define SCE_B_OPERATOR 6
#define SCE_B_IDENTIFIER 7
#define SCE_B_DATE 8
#define SCE_B_STRINGEOL 9
#define SCE_B_KEYWORD2 10
#define SCE_B_KEYWORD3 11
#define SCE_B_KEYWORD4 12
#define SCE_B_CONSTANT 13
#define SCE_B_ASM 14
#define SCE_B_LABEL 15
#define SCE_B_ERROR 16
#define SCE_B_HEXNUMBER 17
#define SCE_B_BINNUMBER 18
#define SCE_PROPS_DEFAULT 0
#define SCE_PROPS_COMMENT 1
#define SCE_PROPS_SECTION 2
#define SCE_PROPS_ASSIGNMENT 3
#define SCE_PROPS_DEFVAL 4
#define SCE_PROPS_KEY 5
#define SCE_L_DEFAULT 0
#define SCE_L_COMMAND 1
#define SCE_L_TAG 2
#define SCE_L_MATH 3
#define SCE_L_COMMENT 4
#define SCE_LUA_DEFAULT 0
#define SCE_LUA_COMMENT 1
#define SCE_LUA_COMMENTLINE 2
#define SCE_LUA_COMMENTDOC 3
#define SCE_LUA_NUMBER 4
#define SCE_LUA_WORD 5
#define SCE_LUA_STRING 6
#define SCE_LUA_CHARACTER 7
#define SCE_LUA_LITERALSTRING 8
#define SCE_LUA_PREPROCESSOR 9
#define SCE_LUA_OPERATOR 10
#define SCE_LUA_IDENTIFIER 11
#define SCE_LUA_STRINGEOL 12
#define SCE_LUA_WORD2 13
#define SCE_LUA_WORD3 14
#define SCE_LUA_WORD4 15
#define SCE_LUA_WORD5 16
#define SCE_LUA_WORD6 17
#define SCE_LUA_WORD7 18
#define SCE_LUA_WORD8 19
#define SCE_ERR_DEFAULT 0
#define SCE_ERR_PYTHON 1
#define SCE_ERR_GCC 2
#define SCE_ERR_MS 3
#define SCE_ERR_CMD 4
#define SCE_ERR_BORLAND 5
#define SCE_ERR_PERL 6
#define SCE_ERR_NET 7
#define SCE_ERR_LUA 8
#define SCE_ERR_CTAG 9
#define SCE_ERR_DIFF_CHANGED 10
#define SCE_ERR_DIFF_ADDITION 11
#define SCE_ERR_DIFF_DELETION 12
#define SCE_ERR_DIFF_MESSAGE 13
#define SCE_ERR_PHP 14
#define SCE_ERR_ELF 15
#define SCE_ERR_IFC 16
#define SCE_ERR_IFORT 17
#define SCE_ERR_ABSF 18
#define SCE_ERR_TIDY 19
#define SCE_ERR_JAVA_STACK 20
#define SCE_BAT_DEFAULT 0
#define SCE_BAT_COMMENT 1
#define SCE_BAT_WORD 2
#define SCE_BAT_LABEL 3
#define SCE_BAT_HIDE 4
#define SCE_BAT_COMMAND 5
#define SCE_BAT_IDENTIFIER 6
#define SCE_BAT_OPERATOR 7
#define SCE_MAKE_DEFAULT 0
#define SCE_MAKE_COMMENT 1
#define SCE_MAKE_PREPROCESSOR 2
#define SCE_MAKE_IDENTIFIER 3
#define SCE_MAKE_OPERATOR 4
#define SCE_MAKE_TARGET 5
#define SCE_MAKE_IDEOL 9
#define SCE_DIFF_DEFAULT 0
#define SCE_DIFF_COMMENT 1
#define SCE_DIFF_COMMAND 2
#define SCE_DIFF_HEADER 3
#define SCE_DIFF_POSITION 4
#define SCE_DIFF_DELETED 5
#define SCE_DIFF_ADDED 6
#define SCE_CONF_DEFAULT 0
#define SCE_CONF_COMMENT 1
#define SCE_CONF_NUMBER 2
#define SCE_CONF_IDENTIFIER 3
#define SCE_CONF_EXTENSION 4
#define SCE_CONF_PARAMETER 5
#define SCE_CONF_STRING 6
#define SCE_CONF_OPERATOR 7
#define SCE_CONF_IP 8
#define SCE_CONF_DIRECTIVE 9
#define SCE_AVE_DEFAULT 0
#define SCE_AVE_COMMENT 1
#define SCE_AVE_NUMBER 2
#define SCE_AVE_WORD 3
#define SCE_AVE_STRING 6
#define SCE_AVE_ENUM 7
#define SCE_AVE_STRINGEOL 8
#define SCE_AVE_IDENTIFIER 9
#define SCE_AVE_OPERATOR 10
#define SCE_AVE_WORD1 11
#define SCE_AVE_WORD2 12
#define SCE_AVE_WORD3 13
#define SCE_AVE_WORD4 14
#define SCE_AVE_WORD5 15
#define SCE_AVE_WORD6 16
#define SCE_ADA_DEFAULT 0
#define SCE_ADA_WORD 1
#define SCE_ADA_IDENTIFIER 2
#define SCE_ADA_NUMBER 3
#define SCE_ADA_DELIMITER 4
#define SCE_ADA_CHARACTER 5
#define SCE_ADA_CHARACTEREOL 6
#define SCE_ADA_STRING 7
#define SCE_ADA_STRINGEOL 8
#define SCE_ADA_LABEL 9
#define SCE_ADA_COMMENTLINE 10
#define SCE_ADA_ILLEGAL 11
#define SCE_BAAN_DEFAULT 0
#define SCE_BAAN_COMMENT 1
#define SCE_BAAN_COMMENTDOC 2
#define SCE_BAAN_NUMBER 3
#define SCE_BAAN_WORD 4
#define SCE_BAAN_STRING 5
#define SCE_BAAN_PREPROCESSOR 6
#define SCE_BAAN_OPERATOR 7
#define SCE_BAAN_IDENTIFIER 8
#define SCE_BAAN_STRINGEOL 9
#define SCE_BAAN_WORD2 10
#define SCE_LISP_DEFAULT 0
#define SCE_LISP_COMMENT 1
#define SCE_LISP_NUMBER 2
#define SCE_LISP_KEYWORD 3
#define SCE_LISP_KEYWORD_KW 4
#define SCE_LISP_SYMBOL 5
#define SCE_LISP_STRING 6
#define SCE_LISP_STRINGEOL 8
#define SCE_LISP_IDENTIFIER 9
#define SCE_LISP_OPERATOR 10
#define SCE_LISP_SPECIAL 11
#define SCE_LISP_MULTI_COMMENT 12
#define SCE_EIFFEL_DEFAULT 0
#define SCE_EIFFEL_COMMENTLINE 1
#define SCE_EIFFEL_NUMBER 2
#define SCE_EIFFEL_WORD 3
#define SCE_EIFFEL_STRING 4
#define SCE_EIFFEL_CHARACTER 5
#define SCE_EIFFEL_OPERATOR 6
#define SCE_EIFFEL_IDENTIFIER 7
#define SCE_EIFFEL_STRINGEOL 8
#define SCE_NNCRONTAB_DEFAULT 0
#define SCE_NNCRONTAB_COMMENT 1
#define SCE_NNCRONTAB_TASK 2
#define SCE_NNCRONTAB_SECTION 3
#define SCE_NNCRONTAB_KEYWORD 4
#define SCE_NNCRONTAB_MODIFIER 5
#define SCE_NNCRONTAB_ASTERISK 6
#define SCE_NNCRONTAB_NUMBER 7
#define SCE_NNCRONTAB_STRING 8
#define SCE_NNCRONTAB_ENVIRONMENT 9
#define SCE_NNCRONTAB_IDENTIFIER 10
#define SCE_FORTH_DEFAULT 0
#define SCE_FORTH_COMMENT 1
#define SCE_FORTH_COMMENT_ML 2
#define SCE_FORTH_IDENTIFIER 3
#define SCE_FORTH_CONTROL 4
#define SCE_FORTH_KEYWORD 5
#define SCE_FORTH_DEFWORD 6
#define SCE_FORTH_PREWORD1 7
#define SCE_FORTH_PREWORD2 8
#define SCE_FORTH_NUMBER 9
#define SCE_FORTH_STRING 10
#define SCE_FORTH_LOCALE 11
#define SCE_MATLAB_DEFAULT 0
#define SCE_MATLAB_COMMENT 1
#define SCE_MATLAB_COMMAND 2
#define SCE_MATLAB_NUMBER 3
#define SCE_MATLAB_KEYWORD 4
#define SCE_MATLAB_STRING 5
#define SCE_MATLAB_OPERATOR 6
#define SCE_MATLAB_IDENTIFIER 7
#define SCE_MATLAB_DOUBLEQUOTESTRING 8
#define SCE_SCRIPTOL_DEFAULT 0
#define SCE_SCRIPTOL_WHITE 1
#define SCE_SCRIPTOL_COMMENTLINE 2
#define SCE_SCRIPTOL_PERSISTENT 3
#define SCE_SCRIPTOL_CSTYLE 4
#define SCE_SCRIPTOL_COMMENTBLOCK 5
#define SCE_SCRIPTOL_NUMBER 6
#define SCE_SCRIPTOL_STRING 7
#define SCE_SCRIPTOL_CHARACTER 8
#define SCE_SCRIPTOL_STRINGEOL 9
#define SCE_SCRIPTOL_KEYWORD 10
#define SCE_SCRIPTOL_OPERATOR 11
#define SCE_SCRIPTOL_IDENTIFIER 12
#define SCE_SCRIPTOL_TRIPLE 13
#define SCE_SCRIPTOL_CLASSNAME 14
#define SCE_SCRIPTOL_PREPROCESSOR 15
#define SCE_ASM_DEFAULT 0
#define SCE_ASM_COMMENT 1
#define SCE_ASM_NUMBER 2
#define SCE_ASM_STRING 3
#define SCE_ASM_OPERATOR 4
#define SCE_ASM_IDENTIFIER 5
#define SCE_ASM_CPUINSTRUCTION 6
#define SCE_ASM_MATHINSTRUCTION 7
#define SCE_ASM_REGISTER 8
#define SCE_ASM_DIRECTIVE 9
#define SCE_ASM_DIRECTIVEOPERAND 10
#define SCE_ASM_COMMENTBLOCK 11
#define SCE_ASM_CHARACTER 12
#define SCE_ASM_STRINGEOL 13
#define SCE_ASM_EXTINSTRUCTION 14
#define SCE_F_DEFAULT 0
#define SCE_F_COMMENT 1
#define SCE_F_NUMBER 2
#define SCE_F_STRING1 3
#define SCE_F_STRING2 4
#define SCE_F_STRINGEOL 5
#define SCE_F_OPERATOR 6
#define SCE_F_IDENTIFIER 7
#define SCE_F_WORD 8
#define SCE_F_WORD2 9
#define SCE_F_WORD3 10
#define SCE_F_PREPROCESSOR 11
#define SCE_F_OPERATOR2 12
#define SCE_F_LABEL 13
#define SCE_F_CONTINUATION 14
#define SCE_CSS_DEFAULT 0
#define SCE_CSS_TAG 1
#define SCE_CSS_CLASS 2
#define SCE_CSS_PSEUDOCLASS 3
#define SCE_CSS_UNKNOWN_PSEUDOCLASS 4
#define SCE_CSS_OPERATOR 5
#define SCE_CSS_IDENTIFIER 6
#define SCE_CSS_UNKNOWN_IDENTIFIER 7
#define SCE_CSS_VALUE 8
#define SCE_CSS_COMMENT 9
#define SCE_CSS_ID 10
#define SCE_CSS_IMPORTANT 11
#define SCE_CSS_DIRECTIVE 12
#define SCE_CSS_DOUBLESTRING 13
#define SCE_CSS_SINGLESTRING 14
#define SCE_CSS_IDENTIFIER2 15
#define SCE_CSS_ATTRIBUTE 16
#define SCE_POV_DEFAULT 0
#define SCE_POV_COMMENT 1
#define SCE_POV_COMMENTLINE 2
#define SCE_POV_NUMBER 3
#define SCE_POV_OPERATOR 4
#define SCE_POV_IDENTIFIER 5
#define SCE_POV_STRING 6
#define SCE_POV_STRINGEOL 7
#define SCE_POV_DIRECTIVE 8
#define SCE_POV_BADDIRECTIVE 9
#define SCE_POV_WORD2 10
#define SCE_POV_WORD3 11
#define SCE_POV_WORD4 12
#define SCE_POV_WORD5 13
#define SCE_POV_WORD6 14
#define SCE_POV_WORD7 15
#define SCE_POV_WORD8 16
#define SCE_LOUT_DEFAULT 0
#define SCE_LOUT_COMMENT 1
#define SCE_LOUT_NUMBER 2
#define SCE_LOUT_WORD 3
#define SCE_LOUT_WORD2 4
#define SCE_LOUT_WORD3 5
#define SCE_LOUT_WORD4 6
#define SCE_LOUT_STRING 7
#define SCE_LOUT_OPERATOR 8
#define SCE_LOUT_IDENTIFIER 9
#define SCE_LOUT_STRINGEOL 10
#define SCE_ESCRIPT_DEFAULT 0
#define SCE_ESCRIPT_COMMENT 1
#define SCE_ESCRIPT_COMMENTLINE 2
#define SCE_ESCRIPT_COMMENTDOC 3
#define SCE_ESCRIPT_NUMBER 4
#define SCE_ESCRIPT_WORD 5
#define SCE_ESCRIPT_STRING 6
#define SCE_ESCRIPT_OPERATOR 7
#define SCE_ESCRIPT_IDENTIFIER 8
#define SCE_ESCRIPT_BRACE 9
#define SCE_ESCRIPT_WORD2 10
#define SCE_ESCRIPT_WORD3 11
#define SCE_PS_DEFAULT 0
#define SCE_PS_COMMENT 1
#define SCE_PS_DSC_COMMENT 2
#define SCE_PS_DSC_VALUE 3
#define SCE_PS_NUMBER 4
#define SCE_PS_NAME 5
#define SCE_PS_KEYWORD 6
#define SCE_PS_LITERAL 7
#define SCE_PS_IMMEVAL 8
#define SCE_PS_PAREN_ARRAY 9
#define SCE_PS_PAREN_DICT 10
#define SCE_PS_PAREN_PROC 11
#define SCE_PS_TEXT 12
#define SCE_PS_HEXSTRING 13
#define SCE_PS_BASE85STRING 14
#define SCE_PS_BADSTRINGCHAR 15
#define SCE_NSIS_DEFAULT 0
#define SCE_NSIS_COMMENT 1
#define SCE_NSIS_STRINGDQ 2
#define SCE_NSIS_STRINGLQ 3
#define SCE_NSIS_STRINGRQ 4
#define SCE_NSIS_FUNCTION 5
#define SCE_NSIS_VARIABLE 6
#define SCE_NSIS_LABEL 7
#define SCE_NSIS_USERDEFINED 8
#define SCE_NSIS_SECTIONDEF 9
#define SCE_NSIS_SUBSECTIONDEF 10
#define SCE_NSIS_IFDEFINEDEF 11
#define SCE_NSIS_MACRODEF 12
#define SCE_NSIS_STRINGVAR 13
#define SCE_NSIS_NUMBER 14
#define SCE_NSIS_SECTIONGROUP 15
#define SCE_NSIS_PAGEEX 16
#define SCE_NSIS_FUNCTIONDEF 17
#define SCE_NSIS_COMMENTBOX 18
#define SCE_MMIXAL_LEADWS 0
#define SCE_MMIXAL_COMMENT 1
#define SCE_MMIXAL_LABEL 2
#define SCE_MMIXAL_OPCODE 3
#define SCE_MMIXAL_OPCODE_PRE 4
#define SCE_MMIXAL_OPCODE_VALID 5
#define SCE_MMIXAL_OPCODE_UNKNOWN 6
#define SCE_MMIXAL_OPCODE_POST 7
#define SCE_MMIXAL_OPERANDS 8
#define SCE_MMIXAL_NUMBER 9
#define SCE_MMIXAL_REF 10
#define SCE_MMIXAL_CHAR 11
#define SCE_MMIXAL_STRING 12
#define SCE_MMIXAL_REGISTER 13
#define SCE_MMIXAL_HEX 14
#define SCE_MMIXAL_OPERATOR 15
#define SCE_MMIXAL_SYMBOL 16
#define SCE_MMIXAL_INCLUDE 17
#define SCE_CLW_DEFAULT 0
#define SCE_CLW_LABEL 1
#define SCE_CLW_COMMENT 2
#define SCE_CLW_STRING 3
#define SCE_CLW_USER_IDENTIFIER 4
#define SCE_CLW_INTEGER_CONSTANT 5
#define SCE_CLW_REAL_CONSTANT 6
#define SCE_CLW_PICTURE_STRING 7
#define SCE_CLW_KEYWORD 8
#define SCE_CLW_COMPILER_DIRECTIVE 9
#define SCE_CLW_RUNTIME_EXPRESSIONS 10
#define SCE_CLW_BUILTIN_PROCEDURES_FUNCTION 11
#define SCE_CLW_STRUCTURE_DATA_TYPE 12
#define SCE_CLW_ATTRIBUTE 13
#define SCE_CLW_STANDARD_EQUATE 14
#define SCE_CLW_ERROR 15
#define SCE_CLW_DEPRECATED 16
#define SCE_LOT_DEFAULT 0
#define SCE_LOT_HEADER 1
#define SCE_LOT_BREAK 2
#define SCE_LOT_SET 3
#define SCE_LOT_PASS 4
#define SCE_LOT_FAIL 5
#define SCE_LOT_ABORT 6
#define SCE_YAML_DEFAULT 0
#define SCE_YAML_COMMENT 1
#define SCE_YAML_IDENTIFIER 2
#define SCE_YAML_KEYWORD 3
#define SCE_YAML_NUMBER 4
#define SCE_YAML_REFERENCE 5
#define SCE_YAML_DOCUMENT 6
#define SCE_YAML_TEXT 7
#define SCE_YAML_ERROR 8
#define SCE_TEX_DEFAULT 0
#define SCE_TEX_SPECIAL 1
#define SCE_TEX_GROUP 2
#define SCE_TEX_SYMBOL 3
#define SCE_TEX_COMMAND 4
#define SCE_TEX_TEXT 5
#define SCE_METAPOST_DEFAULT 0
#define SCE_METAPOST_SPECIAL 1
#define SCE_METAPOST_GROUP 2
#define SCE_METAPOST_SYMBOL 3
#define SCE_METAPOST_COMMAND 4
#define SCE_METAPOST_TEXT 5
#define SCE_METAPOST_EXTRA 6
#define SCE_ERLANG_DEFAULT 0
#define SCE_ERLANG_COMMENT 1
#define SCE_ERLANG_VARIABLE 2
#define SCE_ERLANG_NUMBER 3
#define SCE_ERLANG_KEYWORD 4
#define SCE_ERLANG_STRING 5
#define SCE_ERLANG_OPERATOR 6
#define SCE_ERLANG_ATOM 7
#define SCE_ERLANG_FUNCTION_NAME 8
#define SCE_ERLANG_CHARACTER 9
#define SCE_ERLANG_MACRO 10
#define SCE_ERLANG_RECORD 11
#define SCE_ERLANG_SEPARATOR 12
#define SCE_ERLANG_NODE_NAME 13
#define SCE_ERLANG_UNKNOWN 31
#define SCE_MSSQL_DEFAULT 0
#define SCE_MSSQL_COMMENT 1
#define SCE_MSSQL_LINE_COMMENT 2
#define SCE_MSSQL_NUMBER 3
#define SCE_MSSQL_STRING 4
#define SCE_MSSQL_OPERATOR 5
#define SCE_MSSQL_IDENTIFIER 6
#define SCE_MSSQL_VARIABLE 7
#define SCE_MSSQL_COLUMN_NAME 8
#define SCE_MSSQL_STATEMENT 9
#define SCE_MSSQL_DATATYPE 10
#define SCE_MSSQL_SYSTABLE 11
#define SCE_MSSQL_GLOBAL_VARIABLE 12
#define SCE_MSSQL_FUNCTION 13
#define SCE_MSSQL_STORED_PROCEDURE 14
#define SCE_MSSQL_DEFAULT_PREF_DATATYPE 15
#define SCE_MSSQL_COLUMN_NAME_2 16
#define SCE_V_DEFAULT 0
#define SCE_V_COMMENT 1
#define SCE_V_COMMENTLINE 2
#define SCE_V_COMMENTLINEBANG 3
#define SCE_V_NUMBER 4
#define SCE_V_WORD 5
#define SCE_V_STRING 6
#define SCE_V_WORD2 7
#define SCE_V_WORD3 8
#define SCE_V_PREPROCESSOR 9
#define SCE_V_OPERATOR 10
#define SCE_V_IDENTIFIER 11
#define SCE_V_STRINGEOL 12
#define SCE_V_USER 19
#define SCE_KIX_DEFAULT 0
#define SCE_KIX_COMMENT 1
#define SCE_KIX_STRING1 2
#define SCE_KIX_STRING2 3
#define SCE_KIX_NUMBER 4
#define SCE_KIX_VAR 5
#define SCE_KIX_MACRO 6
#define SCE_KIX_KEYWORD 7
#define SCE_KIX_FUNCTIONS 8
#define SCE_KIX_OPERATOR 9
#define SCE_KIX_IDENTIFIER 31
#define SCE_GC_DEFAULT 0
#define SCE_GC_COMMENTLINE 1
#define SCE_GC_COMMENTBLOCK 2
#define SCE_GC_GLOBAL 3
#define SCE_GC_EVENT 4
#define SCE_GC_ATTRIBUTE 5
#define SCE_GC_CONTROL 6
#define SCE_GC_COMMAND 7
#define SCE_GC_STRING 8
#define SCE_GC_OPERATOR 9
#define SCE_SN_DEFAULT 0
#define SCE_SN_CODE 1
#define SCE_SN_COMMENTLINE 2
#define SCE_SN_COMMENTLINEBANG 3
#define SCE_SN_NUMBER 4
#define SCE_SN_WORD 5
#define SCE_SN_STRING 6
#define SCE_SN_WORD2 7
#define SCE_SN_WORD3 8
#define SCE_SN_PREPROCESSOR 9
#define SCE_SN_OPERATOR 10
#define SCE_SN_IDENTIFIER 11
#define SCE_SN_STRINGEOL 12
#define SCE_SN_REGEXTAG 13
#define SCE_SN_SIGNAL 14
#define SCE_SN_USER 19
#define SCE_AU3_DEFAULT 0
#define SCE_AU3_COMMENT 1
#define SCE_AU3_COMMENTBLOCK 2
#define SCE_AU3_NUMBER 3
#define SCE_AU3_FUNCTION 4
#define SCE_AU3_KEYWORD 5
#define SCE_AU3_MACRO 6
#define SCE_AU3_STRING 7
#define SCE_AU3_OPERATOR 8
#define SCE_AU3_VARIABLE 9
#define SCE_AU3_SENT 10
#define SCE_AU3_PREPROCESSOR 11
#define SCE_AU3_SPECIAL 12
#define SCE_AU3_EXPAND 13
#define SCE_AU3_COMOBJ 14
#define SCE_AU3_UDF 15
#define SCE_APDL_DEFAULT 0
#define SCE_APDL_COMMENT 1
#define SCE_APDL_COMMENTBLOCK 2
#define SCE_APDL_NUMBER 3
#define SCE_APDL_STRING 4
#define SCE_APDL_OPERATOR 5
#define SCE_APDL_WORD 6
#define SCE_APDL_PROCESSOR 7
#define SCE_APDL_COMMAND 8
#define SCE_APDL_SLASHCOMMAND 9
#define SCE_APDL_STARCOMMAND 10
#define SCE_APDL_ARGUMENT 11
#define SCE_APDL_FUNCTION 12
#define SCE_SH_DEFAULT 0
#define SCE_SH_ERROR 1
#define SCE_SH_COMMENTLINE 2
#define SCE_SH_NUMBER 3
#define SCE_SH_WORD 4
#define SCE_SH_STRING 5
#define SCE_SH_CHARACTER 6
#define SCE_SH_OPERATOR 7
#define SCE_SH_IDENTIFIER 8
#define SCE_SH_SCALAR 9
#define SCE_SH_PARAM 10
#define SCE_SH_BACKTICKS 11
#define SCE_SH_HERE_DELIM 12
#define SCE_SH_HERE_Q 13
#define SCE_ASN1_DEFAULT 0
#define SCE_ASN1_COMMENT 1
#define SCE_ASN1_IDENTIFIER 2
#define SCE_ASN1_STRING 3
#define SCE_ASN1_OID 4
#define SCE_ASN1_SCALAR 5
#define SCE_ASN1_KEYWORD 6
#define SCE_ASN1_ATTRIBUTE 7
#define SCE_ASN1_DESCRIPTOR 8
#define SCE_ASN1_TYPE 9
#define SCE_ASN1_OPERATOR 10
#define SCE_VHDL_DEFAULT 0
#define SCE_VHDL_COMMENT 1
#define SCE_VHDL_COMMENTLINEBANG 2
#define SCE_VHDL_NUMBER 3
#define SCE_VHDL_STRING 4
#define SCE_VHDL_OPERATOR 5
#define SCE_VHDL_IDENTIFIER 6
#define SCE_VHDL_STRINGEOL 7
#define SCE_VHDL_KEYWORD 8
#define SCE_VHDL_STDOPERATOR 9
#define SCE_VHDL_ATTRIBUTE 10
#define SCE_VHDL_STDFUNCTION 11
#define SCE_VHDL_STDPACKAGE 12
#define SCE_VHDL_STDTYPE 13
#define SCE_VHDL_USERWORD 14
#define SCE_CAML_DEFAULT 0
#define SCE_CAML_IDENTIFIER 1
#define SCE_CAML_TAGNAME 2
#define SCE_CAML_KEYWORD 3
#define SCE_CAML_KEYWORD2 4
#define SCE_CAML_KEYWORD3 5
#define SCE_CAML_LINENUM 6
#define SCE_CAML_OPERATOR 7
#define SCE_CAML_NUMBER 8
#define SCE_CAML_CHAR 9
#define SCE_CAML_STRING 11
#define SCE_CAML_COMMENT 12
#define SCE_CAML_COMMENT1 13
#define SCE_CAML_COMMENT2 14
#define SCE_CAML_COMMENT3 15
#define SCE_HA_DEFAULT 0
#define SCE_HA_IDENTIFIER 1
#define SCE_HA_KEYWORD 2
#define SCE_HA_NUMBER 3
#define SCE_HA_STRING 4
#define SCE_HA_CHARACTER 5
#define SCE_HA_CLASS 6
#define SCE_HA_MODULE 7
#define SCE_HA_CAPITAL 8
#define SCE_HA_DATA 9
#define SCE_HA_IMPORT 10
#define SCE_HA_OPERATOR 11
#define SCE_HA_INSTANCE 12
#define SCE_HA_COMMENTLINE 13
#define SCE_HA_COMMENTBLOCK 14
#define SCE_HA_COMMENTBLOCK2 15
#define SCE_HA_COMMENTBLOCK3 16
#define SCE_T3_DEFAULT 0
#define SCE_T3_X_DEFAULT 1
#define SCE_T3_PREPROCESSOR 2
#define SCE_T3_BLOCK_COMMENT 3
#define SCE_T3_LINE_COMMENT 4
#define SCE_T3_OPERATOR 5
#define SCE_T3_KEYWORD 6
#define SCE_T3_NUMBER 7
#define SCE_T3_IDENTIFIER 8
#define SCE_T3_S_STRING 9
#define SCE_T3_D_STRING 10
#define SCE_T3_X_STRING 11
#define SCE_T3_LIB_DIRECTIVE 12
#define SCE_T3_MSG_PARAM 13
#define SCE_T3_HTML_TAG 14
#define SCE_T3_HTML_DEFAULT 15
#define SCE_T3_HTML_STRING 16
#define SCE_T3_USER1 17
#define SCE_T3_USER2 18
#define SCE_T3_USER3 19
#define SCE_REBOL_DEFAULT 0
#define SCE_REBOL_COMMENTLINE 1
#define SCE_REBOL_COMMENTBLOCK 2
#define SCE_REBOL_PREFACE 3
#define SCE_REBOL_OPERATOR 4
#define SCE_REBOL_CHARACTER 5
#define SCE_REBOL_QUOTEDSTRING 6
#define SCE_REBOL_BRACEDSTRING 7
#define SCE_REBOL_NUMBER 8
#define SCE_REBOL_PAIR 9
#define SCE_REBOL_TUPLE 10
#define SCE_REBOL_BINARY 11
#define SCE_REBOL_MONEY 12
#define SCE_REBOL_ISSUE 13
#define SCE_REBOL_TAG 14
#define SCE_REBOL_FILE 15
#define SCE_REBOL_EMAIL 16
#define SCE_REBOL_URL 17
#define SCE_REBOL_DATE 18
#define SCE_REBOL_TIME 19
#define SCE_REBOL_IDENTIFIER 20
#define SCE_REBOL_WORD 21
#define SCE_REBOL_WORD2 22
#define SCE_REBOL_WORD3 23
#define SCE_REBOL_WORD4 24
#define SCE_REBOL_WORD5 25
#define SCE_REBOL_WORD6 26
#define SCE_REBOL_WORD7 27
#define SCE_REBOL_WORD8 28
#define SCE_SQL_DEFAULT 0
#define SCE_SQL_COMMENT 1
#define SCE_SQL_COMMENTLINE 2
#define SCE_SQL_COMMENTDOC 3
#define SCE_SQL_NUMBER 4
#define SCE_SQL_WORD 5
#define SCE_SQL_STRING 6
#define SCE_SQL_CHARACTER 7
#define SCE_SQL_SQLPLUS 8
#define SCE_SQL_SQLPLUS_PROMPT 9
#define SCE_SQL_OPERATOR 10
#define SCE_SQL_IDENTIFIER 11
#define SCE_SQL_SQLPLUS_COMMENT 13
#define SCE_SQL_COMMENTLINEDOC 15
#define SCE_SQL_WORD2 16
#define SCE_SQL_COMMENTDOCKEYWORD 17
#define SCE_SQL_COMMENTDOCKEYWORDERROR 18
#define SCE_SQL_USER1 19
#define SCE_SQL_USER2 20
#define SCE_SQL_USER3 21
#define SCE_SQL_USER4 22
#define SCE_SQL_QUOTEDIDENTIFIER 23
#define SCE_ST_DEFAULT 0
#define SCE_ST_STRING 1
#define SCE_ST_NUMBER 2
#define SCE_ST_COMMENT 3
#define SCE_ST_SYMBOL 4
#define SCE_ST_BINARY 5
#define SCE_ST_BOOL 6
#define SCE_ST_SELF 7
#define SCE_ST_SUPER 8
#define SCE_ST_NIL 9
#define SCE_ST_GLOBAL 10
#define SCE_ST_RETURN 11
#define SCE_ST_SPECIAL 12
#define SCE_ST_KWSEND 13
#define SCE_ST_ASSIGN 14
#define SCE_ST_CHARACTER 15
#define SCE_ST_SPEC_SEL 16
#define SCE_FS_DEFAULT 0
#define SCE_FS_COMMENT 1
#define SCE_FS_COMMENTLINE 2
#define SCE_FS_COMMENTDOC 3
#define SCE_FS_COMMENTLINEDOC 4
#define SCE_FS_COMMENTDOCKEYWORD 5
#define SCE_FS_COMMENTDOCKEYWORDERROR 6
#define SCE_FS_KEYWORD 7
#define SCE_FS_KEYWORD2 8
#define SCE_FS_KEYWORD3 9
#define SCE_FS_KEYWORD4 10
#define SCE_FS_NUMBER 11
#define SCE_FS_STRING 12
#define SCE_FS_PREPROCESSOR 13
#define SCE_FS_OPERATOR 14
#define SCE_FS_IDENTIFIER 15
#define SCE_FS_DATE 16
#define SCE_FS_STRINGEOL 17
#define SCE_FS_CONSTANT 18
#define SCE_FS_ASM 19
#define SCE_FS_LABEL 20
#define SCE_FS_ERROR 21
#define SCE_FS_HEXNUMBER 22
#define SCE_FS_BINNUMBER 23
#define SCE_CSOUND_DEFAULT 0
#define SCE_CSOUND_COMMENT 1
#define SCE_CSOUND_NUMBER 2
#define SCE_CSOUND_OPERATOR 3
#define SCE_CSOUND_INSTR 4
#define SCE_CSOUND_IDENTIFIER 5
#define SCE_CSOUND_OPCODE 6
#define SCE_CSOUND_HEADERSTMT 7
#define SCE_CSOUND_USERKEYWORD 8
#define SCE_CSOUND_COMMENTBLOCK 9
#define SCE_CSOUND_PARAM 10
#define SCE_CSOUND_ARATE_VAR 11
#define SCE_CSOUND_KRATE_VAR 12
#define SCE_CSOUND_IRATE_VAR 13
#define SCE_CSOUND_GLOBAL_VAR 14
#define SCE_CSOUND_STRINGEOL 15
#define SCE_INNO_DEFAULT 0
#define SCE_INNO_COMMENT 1
#define SCE_INNO_KEYWORD 2
#define SCE_INNO_PARAMETER 3
#define SCE_INNO_SECTION 4
#define SCE_INNO_PREPROC 5
#define SCE_INNO_PREPROC_INLINE 6
#define SCE_INNO_COMMENT_PASCAL 7
#define SCE_INNO_KEYWORD_PASCAL 8
#define SCE_INNO_KEYWORD_USER 9
#define SCE_INNO_STRING_DOUBLE 10
#define SCE_INNO_STRING_SINGLE 11
#define SCE_INNO_IDENTIFIER 12
#define SCE_OPAL_SPACE 0
#define SCE_OPAL_COMMENT_BLOCK 1
#define SCE_OPAL_COMMENT_LINE 2
#define SCE_OPAL_INTEGER 3
#define SCE_OPAL_KEYWORD 4
#define SCE_OPAL_SORT 5
#define SCE_OPAL_STRING 6
#define SCE_OPAL_PAR 7
#define SCE_OPAL_BOOL_CONST 8
#define SCE_OPAL_DEFAULT 32
#define SCE_SPICE_DEFAULT 0
#define SCE_SPICE_IDENTIFIER 1
#define SCE_SPICE_KEYWORD 2
#define SCE_SPICE_KEYWORD2 3
#define SCE_SPICE_KEYWORD3 4
#define SCE_SPICE_NUMBER 5
#define SCE_SPICE_DELIMITER 6
#define SCE_SPICE_VALUE 7
#define SCE_SPICE_COMMENTLINE 8

/* --- End of autogenerated code --- */

#ifdef __cplusplus
}
#endif

#endif /* __GTK_SCINTILLA_H__ */
