/* GtkScintilla2: Wrapper widget for the Scintilla editing component.
 *
 * Copyright (c) 2002  Dennis J Houy <djhouy@paw.co.za>
 * Copyright (c) 2001  Michele Campeotto <micampe@micampe.it>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the 
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330, 
 * Boston, MA  02111-1307  USA.
 */

#ifndef __GTK_SCINTILLA_H__
#define __GTK_SCINTILLA_H__

#include <gtk/gtk.h>

#ifdef __cplusplus
extern "C" {
#endif

#define GTK_TYPE_SCINTILLA            (gtk_scintilla_get_type ())
#define GTK_SCINTILLA(obj)            (GTK_CHECK_CAST ((obj), GTK_TYPE_SCINTILLA, GtkScintilla))
#define GTK_SCINTILLA_CLASS(klass)    (GTK_CHECK_CLASS_CAST ((klass), GTK_TYPE_SCINTILLA, GtkScintillaClass))
#define GTK_IS_SCINTILLA(obj)         (GTK_CHECK_TYPE ((obj), GTK_TYPE_SCINTILLA))
#define GTK_IS_SCINTILLA_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((klass), GTK_TYPE_SCINTILLA))

typedef struct _GtkScintilla      GtkScintilla;
typedef struct _GtkScintillaClass GtkScintillaClass;

struct _GtkScintilla {
    GtkFrame parent;
    
    GtkWidget *scintilla;
    
    GtkAccelGroup *accel_group;
};

struct _GtkScintillaClass {
    GtkFrameClass parent_class;

    void (* style_needed)        (GtkWidget *w, gint position);
    void (* char_added)          (GtkWidget *w, gint ch);
    void (* save_point_reached)  (GtkWidget *w);
    void (* save_point_left)     (GtkWidget *w);
    void (* modify_attempt_ro)   (GtkWidget *w);
    void (* key)                 (GtkWidget *w, gint ch, gint modifiers);
    void (* double_click)        (GtkWidget *w);
    void (* update_ui)           (GtkWidget *w);
    void (* modified)            (GtkWidget *w);
    void (* macro_record)        (GtkWidget *w, gint message, gint wparam, gint lparam);
    void (* margin_click)        (GtkWidget *w, gint modifiers, gint position, gint margin);
    void (* need_shown)          (GtkWidget *w, gint position, gint lenght);
    void (* painted)             (GtkWidget *w);
    void (* user_list_selection) (GtkWidget *w, gint type, gchar *text);
    void (* uri_dropped)         (GtkWidget *w, gchar *text);
    void (* dwell_start)         (GtkWidget *w, gint position);
    void (* dwell_end)           (GtkWidget *w, gint position);
    void (* zoom)                (GtkWidget *w);
};

GType      gtk_scintilla_get_type       (void) G_GNUC_CONST;
GtkWidget *gtk_scintilla_new            (void);

glong      gtk_scintilla_find_text      (GtkScintilla *sci,
                                         gint          flags,
                                         gchar        *text,
                                         glong         chrg_min,
                                         glong         chrg_max,
                                         glong        *text_min,
                                         glong        *text_max);

gchar     *gtk_scintilla_get_text_range (GtkScintilla *sci,
                                         gint          start,
                                         gint          end,
                                         gint         *length);

/* --- Start of autogenerated code --- */

%scintilla_defs%
/* --- End of autogenerated code --- */

#ifdef __cplusplus
}
#endif

#endif /* __GTK_SCINTILLA_H__ */
